apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: autopeer-operator
    control-plane: controller-manager
  name: autopeer-operator-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: nodes.autopeer.badaimweeb.me
spec:
  group: autopeer.badaimweeb.me
  names:
    kind: Node
    listKind: NodeList
    plural: nodes
    singular: node
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Node is the Schema for the node API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: spec defines the desired state of Node
            properties:
              externalAddress:
                description: External address. Required if type is "external".
                type: string
              ipv4Address:
                description: |-
                  Local IPv4 address for this node to be used for peerings.
                  Optional if this node only routes IPv6, or we're using Extended Next-Hop.
                type: string
              jobWorkerImage:
                default: ghcr.io/badaimweeb/autopeer-operator/job-worker:20251001-180103-gc7968af
                description: |-
                  Image to be deployed to node to configure the relevant parts for peering, should you choose to differ
                  from the default image. Only applicable if type is "k8s".
                type: string
              nodeName:
                description: Kubernetes node name. Required if type is "k8s".
                type: string
              peerConfigDir:
                default: /etc/bird/peers
                description: |-
                  BIRD peering configuration directory. The operator will drop peering configs here.
                  Default to /etc/bird/peers if not set.
                type: string
              type:
                description: |-
                  Type of node referenced: "k8s" for nodes in the same K8s cluster, "external" for nodes outside the cluster.
                  If node is "external", it must run a companion agent to receive Peering configs and apply them (WIP).
                type: string
              wgConfigDir:
                default: /etc/wireguard
                description: |-
                  WireGuard configuration directory. The operator will drop WireGuard configs here if needed for peerings.
                  Internally, wg-quick will be used to manage WireGuard interfaces.
                  Default to /etc/wireguard if not set.
                type: string
            required:
            - type
            type: object
          status:
            description: status defines the observed state of Node
            properties:
              conditions:
                description: |-
                  conditions represent the current state of the Node resource.
                  Each condition has a unique type and reflects the status of a specific aspect of the resource.

                  Standard condition types include:
                  - "Available": the resource is fully functional
                  - "Progressing": the resource is being created or updated
                  - "Degraded": the resource failed to reach or maintain its desired state

                  The status of each condition is one of True, False, or Unknown.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: peerings.autopeer.badaimweeb.me
spec:
  group: autopeer.badaimweeb.me
  names:
    kind: Peering
    listKind: PeeringList
    plural: peerings
    singular: peering
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Peering is the Schema for the peerings API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: spec defines the desired state of Peering
            properties:
              cost:
                default: 0
                description: |-
                  Cost to reach this peer, lower values are preferred.
                  Recommended to be consistent with your IGP cost to be able to fine-tune path selection.
                  Leave blank to not use cost.
                format: int32
                type: integer
              enabled:
                default: true
                description: Whether to enable this peering. Disabling a peering will
                  shut it down immediately.
                type: boolean
              enh:
                description: Extended Next-Hop (ENH) allows routing IPv4 traffic over
                  an IPv6-only link.
                type: boolean
              localIPv6:
                description: Local IPv6 address, must be Link-local if PeerIPv6 is
                  Link-local. Optional if this peer only routes IPv4.
                type: string
              mpbgp:
                description: |-
                  Indicates whether to use Multiprotocol BGP (MP-BGP) to exchange IPv6 routes.
                  If false, there will be multiple BGP sessions for IPv4 and IPv6 (if configured).
                  If true, there will be only one BGP session over IPv6 for both IPv4 and IPv6 routes.
                type: boolean
              peerASN:
                description: Peer ASN
                format: int32
                type: integer
              peerIPv4:
                description: Peer IPv4 address. Optional if this peer only routes
                  IPv6, or we're using Extended Next-Hop.
                type: string
              peerIPv6:
                description: Peer IPv6 address, can be Link-local or Global/ULA. Optional
                  if this peer only routes IPv4.
                type: string
              targetNode:
                description: Target node to peer with
                type: string
              tunnelType:
                default: wireguard
                description: What tunnel mechanism to use to reach this peer. Default
                  to "wireguard" if not specified.
                type: string
              wireguard:
                description: WireGuard configuration to be used if TunnelType is "wireguard".
                properties:
                  endpoint:
                    description: Peer endpoint for the WireGuard interface. Empty
                      if you want to let remote peer initiate the connection.
                    type: string
                  localPort:
                    default: 0
                    description: Local port for the WireGuard interface. Leave blank
                      to use a random port (you'll only make outbound connections).
                    format: int32
                    type: integer
                  mtu:
                    default: 0
                    description: MTU for the WireGuard interface. Leave blank to use
                      system default (usually 1420 or 1422).
                    format: int32
                    type: integer
                  peerPublicKey:
                    description: Peer WireGuard public key.
                    type: string
                  presharedKey:
                    description: Pre-shared key for the WireGuard interface. Optional
                      but recommended for additional security.
                    type: string
                  privateKey:
                    description: Local WireGuard private key. If not provided, a new
                      keypair will be generated.
                    type: string
                required:
                - peerPublicKey
                type: object
            required:
            - peerASN
            - targetNode
            type: object
          status:
            description: status defines the observed state of Peering
            properties:
              conditions:
                description: |-
                  conditions represent the current state of the Peering resource.
                  Each condition has a unique type and reflects the status of a specific aspect of the resource.

                  Standard condition types include:
                  - "Available": the resource is fully functional
                  - "Progressing": the resource is being created or updated
                  - "Degraded": the resource failed to reach or maintain its desired state

                  The status of each condition is one of True, False, or Unknown.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              provisioned:
                default: false
                description: Is this peering currently provisioned on the node?
                type: boolean
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: autopeer-operator
  name: autopeer-operator-controller-manager
  namespace: autopeer-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: autopeer-operator
  name: autopeer-operator-leader-election-role
  namespace: autopeer-operator-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: autopeer-operator-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autopeer.badaimweeb.me
  resources:
  - nodes
  - peerings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autopeer.badaimweeb.me
  resources:
  - nodes/finalizers
  - peerings/finalizers
  verbs:
  - update
- apiGroups:
  - autopeer.badaimweeb.me
  resources:
  - nodes/status
  - peerings/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: autopeer-operator-metrics-auth-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: autopeer-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: autopeer-operator
  name: autopeer-operator-nodes-admin-role
rules:
- apiGroups:
  - autopeer.badaimweeb.me
  resources:
  - nodes
  verbs:
  - '*'
- apiGroups:
  - autopeer.badaimweeb.me
  resources:
  - nodes/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: autopeer-operator
  name: autopeer-operator-nodes-editor-role
rules:
- apiGroups:
  - autopeer.badaimweeb.me
  resources:
  - nodes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autopeer.badaimweeb.me
  resources:
  - nodes/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: autopeer-operator
  name: autopeer-operator-nodes-viewer-role
rules:
- apiGroups:
  - autopeer.badaimweeb.me
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - autopeer.badaimweeb.me
  resources:
  - nodes/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: autopeer-operator
  name: autopeer-operator-peering-admin-role
rules:
- apiGroups:
  - autopeer.badaimweeb.me.github.com
  resources:
  - peerings
  verbs:
  - '*'
- apiGroups:
  - autopeer.badaimweeb.me.github.com
  resources:
  - peerings/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: autopeer-operator
  name: autopeer-operator-peering-editor-role
rules:
- apiGroups:
  - autopeer.badaimweeb.me.github.com
  resources:
  - peerings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autopeer.badaimweeb.me.github.com
  resources:
  - peerings/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: autopeer-operator
  name: autopeer-operator-peering-viewer-role
rules:
- apiGroups:
  - autopeer.badaimweeb.me.github.com
  resources:
  - peerings
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - autopeer.badaimweeb.me.github.com
  resources:
  - peerings/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: autopeer-operator
  name: autopeer-operator-leader-election-rolebinding
  namespace: autopeer-operator-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: autopeer-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: autopeer-operator-controller-manager
  namespace: autopeer-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: autopeer-operator
  name: autopeer-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: autopeer-operator-manager-role
subjects:
- kind: ServiceAccount
  name: autopeer-operator-controller-manager
  namespace: autopeer-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: autopeer-operator-metrics-auth-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: autopeer-operator-metrics-auth-role
subjects:
- kind: ServiceAccount
  name: autopeer-operator-controller-manager
  namespace: autopeer-operator-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: autopeer-operator
    control-plane: controller-manager
  name: autopeer-operator-controller-manager-metrics-service
  namespace: autopeer-operator-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    app.kubernetes.io/name: autopeer-operator
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: autopeer-operator
    control-plane: controller-manager
  name: autopeer-operator-controller-manager
  namespace: autopeer-operator-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: autopeer-operator
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app.kubernetes.io/name: autopeer-operator
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --metrics-bind-address=:8443
        - --leader-elect
        - --health-probe-bind-address=:8081
        command:
        - /manager
        image: ghcr.io/badaimweeb/autopeer-operator:testing-17
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports: []
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts: []
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: autopeer-operator-controller-manager
      terminationGracePeriodSeconds: 10
      volumes: []
